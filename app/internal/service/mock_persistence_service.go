// Code generated by MockGen. DO NOT EDIT.
// Source: app/internal/service/persistence_service.go

// Package service is a generated GoMock package.
package service

import (
	games "IMP/app/internal/core/games"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPersistenceServiceInterface is a mock of PersistenceServiceInterface interface.
type MockPersistenceServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPersistenceServiceInterfaceMockRecorder
}

// MockPersistenceServiceInterfaceMockRecorder is the mock recorder for MockPersistenceServiceInterface.
type MockPersistenceServiceInterfaceMockRecorder struct {
	mock *MockPersistenceServiceInterface
}

// NewMockPersistenceServiceInterface creates a new mock instance.
func NewMockPersistenceServiceInterface(ctrl *gomock.Controller) *MockPersistenceServiceInterface {
	mock := &MockPersistenceServiceInterface{ctrl: ctrl}
	mock.recorder = &MockPersistenceServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expectedError use.
func (m *MockPersistenceServiceInterface) EXPECT() *MockPersistenceServiceInterfaceMockRecorder {
	return m.recorder
}

// SaveGame mocks base method.
func (m *MockPersistenceServiceInterface) SaveGame(game games.GameStatEntity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveGame", game)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveGame indicates an expectedError call of SaveGame.
func (mr *MockPersistenceServiceInterfaceMockRecorder) SaveGame(game interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveGame", reflect.TypeOf((*MockPersistenceServiceInterface)(nil).SaveGame), game)
}

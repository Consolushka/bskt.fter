// Code generated by MockGen. DO NOT EDIT.
// Source: app/internal/infra/api_nba/client.go

// Package api_nba is a generated GoMock package.
package api_nba

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockClientInterface is a mock of ClientInterface interface.
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface.
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance.
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// Games mocks base method.
func (m *MockClientInterface) Games(id int, date, leagueId, season, teamId, timezone string) (GamesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Games", id, date, leagueId, season, teamId, timezone)
	ret0, _ := ret[0].(GamesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Games indicates an expected call of Games.
func (mr *MockClientInterfaceMockRecorder) Games(id, date, leagueId, season, teamId, timezone interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Games", reflect.TypeOf((*MockClientInterface)(nil).Games), id, date, leagueId, season, teamId, timezone)
}

// PlayerInfo mocks base method.
func (m *MockClientInterface) PlayerInfo(playerId int, name string, teamId, season int, country, search string) (PlayersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PlayerInfo", playerId, name, teamId, season, country, search)
	ret0, _ := ret[0].(PlayersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PlayerInfo indicates an expected call of PlayerInfo.
func (mr *MockClientInterfaceMockRecorder) PlayerInfo(playerId, name, teamId, season, country, search interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PlayerInfo", reflect.TypeOf((*MockClientInterface)(nil).PlayerInfo), playerId, name, teamId, season, country, search)
}

// PlayersStatistics mocks base method.
func (m *MockClientInterface) PlayersStatistics(playerId, gameId, teamId int, season string) (PlayerStatisticResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PlayersStatistics", playerId, gameId, teamId, season)
	ret0, _ := ret[0].(PlayerStatisticResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PlayersStatistics indicates an expected call of PlayersStatistics.
func (mr *MockClientInterfaceMockRecorder) PlayersStatistics(playerId, gameId, teamId, season interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PlayersStatistics", reflect.TypeOf((*MockClientInterface)(nil).PlayersStatistics), playerId, gameId, teamId, season)
}

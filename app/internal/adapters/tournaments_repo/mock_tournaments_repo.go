// Code generated by MockGen. DO NOT EDIT.
// Source: app/internal/ports/tournaments_repo.go

// Package mock_ports is a generated GoMock package.
package tournaments_repo

import (
	tournaments "IMP/app/internal/core/tournaments"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTournamentsRepo is a mock of TournamentsRepo interface.
type MockTournamentsRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTournamentsRepoMockRecorder
}

// MockTournamentsRepoMockRecorder is the mock recorder for MockTournamentsRepo.
type MockTournamentsRepoMockRecorder struct {
	mock *MockTournamentsRepo
}

// NewMockTournamentsRepo creates a new mock instance.
func NewMockTournamentsRepo(ctrl *gomock.Controller) *MockTournamentsRepo {
	mock := &MockTournamentsRepo{ctrl: ctrl}
	mock.recorder = &MockTournamentsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTournamentsRepo) EXPECT() *MockTournamentsRepoMockRecorder {
	return m.recorder
}

// ListActiveTournaments mocks base method.
func (m *MockTournamentsRepo) ListActiveTournaments() ([]tournaments.TournamentModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListActiveTournaments")
	ret0, _ := ret[0].([]tournaments.TournamentModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListActiveTournaments indicates an expected call of ListActiveTournaments.
func (mr *MockTournamentsRepoMockRecorder) ListActiveTournaments() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListActiveTournaments", reflect.TypeOf((*MockTournamentsRepo)(nil).ListActiveTournaments))
}

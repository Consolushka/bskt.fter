// Code generated by MockGen. DO NOT EDIT.
// Source: app/internal/ports/stats_provider.go

// Package stats_provider is a generated GoMock package.
package stats_provider

import (
	games "IMP/app/internal/core/games"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockStatsProvider is a mock of StatsProvider interface.
type MockStatsProvider struct {
	ctrl     *gomock.Controller
	recorder *MockStatsProviderMockRecorder
}

// MockStatsProviderMockRecorder is the mock recorder for MockStatsProvider.
type MockStatsProviderMockRecorder struct {
	mock *MockStatsProvider
}

// NewMockStatsProvider creates a new mock instance.
func NewMockStatsProvider(ctrl *gomock.Controller) *MockStatsProvider {
	mock := &MockStatsProvider{ctrl: ctrl}
	mock.recorder = &MockStatsProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatsProvider) EXPECT() *MockStatsProviderMockRecorder {
	return m.recorder
}

// GetGamesStatsByDate mocks base method.
func (m *MockStatsProvider) GetGamesStatsByPeriod(date time.Time) ([]games.GameStatEntity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGamesStatsByPeriod", date)
	ret0, _ := ret[0].([]games.GameStatEntity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGamesStatsByDate indicates an expected call of GetGamesStatsByDate.
func (mr *MockStatsProviderMockRecorder) GetGamesStatsByDate(date interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGamesStatsByPeriod", reflect.TypeOf((*MockStatsProvider)(nil).GetGamesStatsByPeriod), date)
}

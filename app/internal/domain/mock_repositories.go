// Code generated by MockGen. DO NOT EDIT.
// Source: app/internal/domain/repositories.go

// Package domain is a generated GoMock package.
package domain

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLeaguesRepositoryInterface is a mock of LeaguesRepositoryInterface interface.
type MockLeaguesRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockLeaguesRepositoryInterfaceMockRecorder
}

// MockLeaguesRepositoryInterfaceMockRecorder is the mock recorder for MockLeaguesRepositoryInterface.
type MockLeaguesRepositoryInterfaceMockRecorder struct {
	mock *MockLeaguesRepositoryInterface
}

// NewMockLeaguesRepositoryInterface creates a new mock instance.
func NewMockLeaguesRepositoryInterface(ctrl *gomock.Controller) *MockLeaguesRepositoryInterface {
	mock := &MockLeaguesRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockLeaguesRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLeaguesRepositoryInterface) EXPECT() *MockLeaguesRepositoryInterfaceMockRecorder {
	return m.recorder
}

// FirstByAliasEn mocks base method.
func (m *MockLeaguesRepositoryInterface) FirstByAliasEn(aliasEn string) (*League, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FirstByAliasEn", aliasEn)
	ret0, _ := ret[0].(*League)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FirstByAliasEn indicates an expected call of FirstByAliasEn.
func (mr *MockLeaguesRepositoryInterfaceMockRecorder) FirstByAliasEn(aliasEn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FirstByAliasEn", reflect.TypeOf((*MockLeaguesRepositoryInterface)(nil).FirstByAliasEn), aliasEn)
}

// List mocks base method.
func (m *MockLeaguesRepositoryInterface) List() ([]League, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].([]League)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockLeaguesRepositoryInterfaceMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockLeaguesRepositoryInterface)(nil).List))
}

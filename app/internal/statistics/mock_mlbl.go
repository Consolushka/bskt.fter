// Code generated by MockGen. DO NOT EDIT.
// Source: app/internal/statistics/mlbl.go

// Package statistics is a generated GoMock package.
package statistics

import (
	infobasket "IMP/app/internal/statistics/infobasket"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockmlblMapperInterface is a mock of mlblMapperInterface interface.
type MockmlblMapperInterface struct {
	ctrl     *gomock.Controller
	recorder *MockmlblMapperInterfaceMockRecorder
}

// MockmlblMapperInterfaceMockRecorder is the mock recorder for MockmlblMapperInterface.
type MockmlblMapperInterfaceMockRecorder struct {
	mock *MockmlblMapperInterface
}

// NewMockmlblMapperInterface creates a new mock instance.
func NewMockmlblMapperInterface(ctrl *gomock.Controller) *MockmlblMapperInterface {
	mock := &MockmlblMapperInterface{ctrl: ctrl}
	mock.recorder = &MockmlblMapperInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockmlblMapperInterface) EXPECT() *MockmlblMapperInterfaceMockRecorder {
	return m.recorder
}

// mapGame mocks base method.
func (m *MockmlblMapperInterface) mapGame(game infobasket.GameBoxScoreResponse) (*GameBoxScoreDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapGame", game)
	ret0, _ := ret[0].(*GameBoxScoreDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// mapGame indicates an expected call of mapGame.
func (mr *MockmlblMapperInterfaceMockRecorder) mapGame(game interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapGame", reflect.TypeOf((*MockmlblMapperInterface)(nil).mapGame), game)
}

// mapPlayer mocks base method.
func (m *MockmlblMapperInterface) mapPlayer(player infobasket.PlayerBoxScoreDto) (PlayerDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapPlayer", player)
	ret0, _ := ret[0].(PlayerDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// mapPlayer indicates an expected call of mapPlayer.
func (mr *MockmlblMapperInterfaceMockRecorder) mapPlayer(player interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapPlayer", reflect.TypeOf((*MockmlblMapperInterface)(nil).mapPlayer), player)
}

// mapTeam mocks base method.
func (m *MockmlblMapperInterface) mapTeam(teamBoxScore infobasket.TeamBoxScoreDto) (TeamBoxScoreDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapTeam", teamBoxScore)
	ret0, _ := ret[0].(TeamBoxScoreDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// mapTeam indicates an expected call of mapTeam.
func (mr *MockmlblMapperInterfaceMockRecorder) mapTeam(teamBoxScore interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapTeam", reflect.TypeOf((*MockmlblMapperInterface)(nil).mapTeam), teamBoxScore)
}

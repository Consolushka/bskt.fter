// Code generated by MockGen. DO NOT EDIT.
// Source: app/internal/statistics/nba.go

// Package statistics is a generated GoMock package.
package statistics

import (
	cdn_nba "IMP/app/internal/statistics/cdn_nba"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocknbaMapperInterface is a mock of nbaMapperInterface interface.
type MocknbaMapperInterface struct {
	ctrl     *gomock.Controller
	recorder *MocknbaMapperInterfaceMockRecorder
}

// MocknbaMapperInterfaceMockRecorder is the mock recorder for MocknbaMapperInterface.
type MocknbaMapperInterfaceMockRecorder struct {
	mock *MocknbaMapperInterface
}

// NewMocknbaMapperInterface creates a new mock instance.
func NewMocknbaMapperInterface(ctrl *gomock.Controller) *MocknbaMapperInterface {
	mock := &MocknbaMapperInterface{ctrl: ctrl}
	mock.recorder = &MocknbaMapperInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocknbaMapperInterface) EXPECT() *MocknbaMapperInterfaceMockRecorder {
	return m.recorder
}

// mapGame mocks base method.
func (m *MocknbaMapperInterface) mapGame(gameDto cdn_nba.BoxScoreDto) (GameBoxScoreDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapGame", gameDto)
	ret0, _ := ret[0].(GameBoxScoreDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// mapGame indicates an expected call of mapGame.
func (mr *MocknbaMapperInterfaceMockRecorder) mapGame(gameDto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapGame", reflect.TypeOf((*MocknbaMapperInterface)(nil).mapGame), gameDto)
}

// mapPlayer mocks base method.
func (m *MocknbaMapperInterface) mapPlayer(playerDto cdn_nba.PlayerBoxScoreDto) (PlayerDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapPlayer", playerDto)
	ret0, _ := ret[0].(PlayerDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// mapPlayer indicates an expected call of mapPlayer.
func (mr *MocknbaMapperInterfaceMockRecorder) mapPlayer(playerDto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapPlayer", reflect.TypeOf((*MocknbaMapperInterface)(nil).mapPlayer), playerDto)
}

// mapTeam mocks base method.
func (m *MocknbaMapperInterface) mapTeam(teamDto cdn_nba.TeamBoxScoreDto) (TeamBoxScoreDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapTeam", teamDto)
	ret0, _ := ret[0].(TeamBoxScoreDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// mapTeam indicates an expected call of mapTeam.
func (mr *MocknbaMapperInterfaceMockRecorder) mapTeam(teamDto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapTeam", reflect.TypeOf((*MocknbaMapperInterface)(nil).mapTeam), teamDto)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: app/internal/statistics/cdn_nba/cdn_nba_client.go

// Package cdn_nba is a generated GoMock package.
package cdn_nba

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockClientInterface is a mock of ClientInterface interface.
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface.
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance.
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// BoxScore mocks base method.
func (m *MockClientInterface) BoxScore(gameId string) BoxScoreDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BoxScore", gameId)
	ret0, _ := ret[0].(BoxScoreDto)
	return ret0
}

// BoxScore indicates an expected call of BoxScore.
func (mr *MockClientInterfaceMockRecorder) BoxScore(gameId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BoxScore", reflect.TypeOf((*MockClientInterface)(nil).BoxScore), gameId)
}

// ScheduleSeason mocks base method.
func (m *MockClientInterface) ScheduleSeason() SeasonScheduleDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScheduleSeason")
	ret0, _ := ret[0].(SeasonScheduleDto)
	return ret0
}

// ScheduleSeason indicates an expected call of ScheduleSeason.
func (mr *MockClientInterfaceMockRecorder) ScheduleSeason() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScheduleSeason", reflect.TypeOf((*MockClientInterface)(nil).ScheduleSeason))
}

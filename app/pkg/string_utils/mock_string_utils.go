// Code generated by MockGen. DO NOT EDIT.
// Source: app/pkg/string_utils/string_utils.go

// Package string_utils is a generated GoMock package.
package string_utils

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStringUtilsInterface is a mock of StringUtilsInterface interface.
type MockStringUtilsInterface struct {
	ctrl     *gomock.Controller
	recorder *MockStringUtilsInterfaceMockRecorder
}

// MockStringUtilsInterfaceMockRecorder is the mock recorder for MockStringUtilsInterface.
type MockStringUtilsInterfaceMockRecorder struct {
	mock *MockStringUtilsInterface
}

// NewMockStringUtilsInterface creates a new mock instance.
func NewMockStringUtilsInterface(ctrl *gomock.Controller) *MockStringUtilsInterface {
	mock := &MockStringUtilsInterface{ctrl: ctrl}
	mock.recorder = &MockStringUtilsInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStringUtilsInterface) EXPECT() *MockStringUtilsInterfaceMockRecorder {
	return m.recorder
}

// HasNonLanguageChars mocks base method.
func (m *MockStringUtilsInterface) HasNonLanguageChars(text string, language Language) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HasNonLanguageChars", text, language)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HasNonLanguageChars indicates an expected call of HasNonLanguageChars.
func (mr *MockStringUtilsInterfaceMockRecorder) HasNonLanguageChars(text, language interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasNonLanguageChars", reflect.TypeOf((*MockStringUtilsInterface)(nil).HasNonLanguageChars), text, language)
}

// RemovePunctuationAndSpaces mocks base method.
func (m *MockStringUtilsInterface) RemovePunctuationAndSpaces(text string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemovePunctuationAndSpaces", text)
	ret0, _ := ret[0].(string)
	return ret0
}

// RemovePunctuationAndSpaces indicates an expected call of RemovePunctuationAndSpaces.
func (mr *MockStringUtilsInterfaceMockRecorder) RemovePunctuationAndSpaces(text interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemovePunctuationAndSpaces", reflect.TypeOf((*MockStringUtilsInterface)(nil).RemovePunctuationAndSpaces), text)
}
